---
import gameList from "@/data/games.json";
import "./FeaturedGame.css";
import { marked } from "marked";
import FriendsBelow, { type AssetName } from "../Util/FriendsBelow.astro";

type Props = {
    id: number;
};

const { id } = Astro.props;
const game = gameList[id];
const sticker = game.sticker as AssetName;
const controlNames = Object.keys(game.controls) as any[];
const controls = game.controls as any;
---

<article class="game-view | relative mb-20 h-full w-full transform rounded-box">
    <div
        class="flex-col:flex-row flex h-full w-full items-center lg:justify-start"
    >
        <div class="w-full max-w-md rounded-r-box bg-base-200">
            <h1 class="p-4 text-3xl font-bold">{game.developer}</h1>
        </div>
        <div class="relative flex flex-1 items-center justify-center">
            <FriendsBelow friends={[sticker, sticker, sticker]} offset={3}>
                <iframe
                    src={game.upload}
                    width={game.canvasWidth}
                    height={game.canvasHeight}
                    frameborder={0}
                    class="aboslute border-4 border-base-200 bg-base-200 outline-none"
                >
                </iframe>
            </FriendsBelow>
        </div>
        <div class="w-full max-w-md space-y-4 rounded-l-box bg-base-200 p-4">
            <h1 class="text-3xl font-bold">{game.name}</h1>
            <p set:html={marked.parseInline(game.description)} />
            <div class="divider"></div>
            <div class="flex flex-wrap justify-center gap-4">
                {
                    controlNames.map((control) => {
        const input = controls[control];
        const keyboardInput = input["keyboard"];
        const isWasd = keyboardInput === "wasd";

        if (!keyboardInput) return;

        if (isWasd) {
            return (
                        <div class="flex items-center justify-center gap-4">
                            <div>
                                <p class="font-bold uppercase">
                                    {control}
                                </p>
                            </div>
                            <div>
                                <div class="flex w-full justify-center">
                                    <kbd class="kbd">W</kbd>
                                </div>
                                <div class="flex w-full justify-center">
                                    <kbd class="kbd">A</kbd>
                                    <kbd class="kbd">S</kbd>
                                    <kbd class="kbd">D</kbd>
                                </div>
                            </div>
                        </div>
                    );
        }
        else {
            return (
                        <div class="flex items-center justify-center gap-4">
                            <div>
                                <p class="font-bold uppercase">
                                    {control}
                                </p>
                            </div>
                            <div>
                                <kbd class="kbd">
                                    {keyboardInput.toUpperCase()}
                                </kbd>
                            </div>
                        </div>
                    );
        }
    })
                }
            </div>
        </div>
    </div>
</article>
